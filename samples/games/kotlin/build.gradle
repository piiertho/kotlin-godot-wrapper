buildscript {
    ext.kotlin_version = '1.3.30'
    repositories {
        maven { url '../../../local_repo' }
        mavenLocal()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.godotengine.kotlin:godot-gradle-plugin:1.0.0"
    }
}

repositories {
    maven { url '../../../local_repo' }
    mavenLocal()
    jcenter()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
}

apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlin-godot'


kotlin {
    sourceSets {
        configureGodot([macosMain, linuxMain, windowsMain]) {
            sourceSet {
                kotlin.srcDirs 'src/main/kotlin'
            }
            
            libraryPath 'samples.gdnlib'
            generateGDNS '../project'
            
            //skipEntryGeneration true

            configs 'src/main/kotlin/godot/samples/games/shmup/classes.json',
                    'src/main/kotlin/godot/samples/games/dodge/classes.json',
                    'src/main/kotlin/godot/samples/games/catchBall/classes.json',
                    'src/main/kotlin/godot/samples/games/main/classes.json',
                    'src/main/kotlin/godot/samples/games/fastFinish/classes.json',
                    'src/main/kotlin/godot/samples/games/pong/classes.json'
        }
    }
    targets {
        fromPreset(presets.godotMingwX64, 'windows')
        fromPreset(presets.godotLinuxX64, 'linux')
        fromPreset(presets.godotMacosX64, 'macos')
        configure([macos, linux, windows]) {
            compilations.all {
                buildTypes = [RELEASE]
            }
            //compilations.main.extraOpts('-Xdisable=devirtualization')
        }
    }
}